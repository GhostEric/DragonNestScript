//By AkiAme RuneZ
/*
 *	更新日志 
 **********************************************************************************
 *  v1.1.2
 *  更新在每个循环中重新确定DN窗口位置，可以在脚本开启之后移动DN窗口
 **********************************************************************************
 *	v1.1.1
 *	更新窗口相对坐标，不需要自己写坐标，但是要把窗口分别率改成1024x768，才能使用脚本
 **********************************************************************************
 */

Import "Window.dll"

//全局变量
Dim coordinateX //x坐标
Dim coordinateY //y坐标
Dim keyNum 	//按键代码
Dim delayTime//延迟时间
Dim hWnd//窗口句柄
Dim wSize //窗口大小
Dim wSizeArray, windowX, windowR, windowY, windowB//窗口坐标
Dim windowHeight, windowWidth//窗口宽高
Dim colorWhite = "FFFFFF"
Dim colorYellow = "00CCFF"
Dim colorRed = "0000FF"
Dim colorLightYellow = "99FFFF"
Dim battleNum = 0 //匹配次数
Dim skillNum

//获取DN窗口句柄
hWnd = Window.Find("DragonNest", 0)

Delay (3000)//3秒后开始执行

Do While true
	//重新确定DN窗口坐标
	FindWindowSize()
	//MouseMove(windowX+135, windowY+527)
	//TracePrint GetPixelColor(100, 100)
	isRank()
	isBattle()
	//ClickKey(67, 200)
	Delay(1000)
Loop





//点击鼠标函数，三个参数分别为: x坐标，y坐标，每次点击之后的延迟时间，在该位置的点击次数 
Function ClickMouse(coordinateX, coordinateY, delayTime, clickNum) 
	MouseMove(coordinateX, coordinateY)
	For j = 1 To clickNum
		MouseLeftClick (1)
		Delay (delayTime)
	Next
End Function

//双击左键方法
Function DoubleClickMouse(coordinateX, coordinateY, delayTime)
	MouseMove(coordinateX, coordinateY)
	MouseDoubleClick()
	Delay (delayTime)
End Function

//按键函数，两个参数分别为: 按键代码，点击按键之后的延迟时间
Function ClickKey(keyNum, delayTime)
	KeyPress(keyNum, 1)
	Delay (delayTime)
End Function

//寻找窗口大小及坐标
Function FindWindowSize()
	//下面这句是得到窗口句柄的客户区大小
	wSize = Window.GetClientRect(hWnd)
	//下面这句用于分割字符串,将横坐标和纵坐标分成两个字符串
	wSizeArray = Split(wSize, "|")
	//将字符串转换成数值
	windowX = Clng(wSizeArray(1))
	windowY = Clng(wSizeArray(2))
	windowR = Clng(wSizeArray(3))
	windowB = Clng(wSizeArray(4))
	//计算窗口宽高
	windowWidth = windowR - windowX
	windowHeight = windowB - windowY 
End Function

//判断是否已经在匹配
Function isRank()
	Dim colorP1, colorP2
	colorP1 = GetPixelColor(windowX + 125, windowY + 523)	//“1v1”判断是否在匹配
	colorP2 = GetPixelColor(windowX + 125, windowY + 529)//“1v1”判断是否在匹配
	//当没有在匹配时，点击“1v1决斗”进行匹配
	If colorP1 = colorWhite And colorP2 = colorWhite Then 
		ClickMouse(windowX+144, windowY+525, 50, 1)
	End If
End Function

//判断是否已经进入战斗
Function isBattle()
	Dim  colorP3, colorP4, colorP5	//取三点的颜色用于判断是否有“1分”字样
	colorP3 = GetPixelColor(windowX + 504, windowY + 35) //“1分”，判断是否已匹配到，并进入战斗
	colorP4 = GetPixelColor(windowX + 504, windowY + 39)//“1分”，判断是否已匹配到，并进入战斗
	colorP5 = GetPixelColor(windowX + 504, windowY + 43)//“1分”，判断是否已匹配到，并进入战斗
	If colorP3 = colorYellow And colorP4 = colorYellow AND colorP5 = colorYellow Then 
		startBattle()
	End If
End Function

//已经进入战斗之后进行的操作
Function startBattle()
	//
	Dim colorP6, colorP7, colorP8	//取三点的颜色用于判断“胜利”字样
	Dim colorP9, colorP10, colorP11	//取三点的颜色用于判断“失败”字样
	Dim colorP12, colorP13, colorP14//取三点的颜色用于判断“平局”字样
	Dim colorP15, colorP16, colorP17//取三点的颜色用于判断生命值优势或劣势时的“胜利”或“失败”字样
	Dim colorP18, colorP19, colorP20//取“关闭”字样
	Dim loopNum = 1	//子循环计数器
	Dim loopNum2
	
	Delay (6000)
	//按D
	KeyDown(68,1)
	Delay (600)
	KeyUp(68,1)
	//按W
	KeyDown(87,1)
	Delay (2000)
	KeyUp(87,1)
	Delay (1000)
	//按A
	KeyDown(65,1)
	Delay (900)
	KeyUp(65,1)
	
	Do While True
		FindWindowSize()
		/*******取“胜利”点的颜色，并判断**********/
		colorP6 = GetPixelColor(windowX + 547, windowY + 221) 
		colorP7 = GetPixelColor(windowX + 547, windowY + 225)
		colorP8 = GetPixelColor(windowX + 547, windowY + 233)
		If colorP6 = colorRed And colorP7 = colorRed AND colorP8 = colorRed Then 
			battleNum = battleNum + 1
			Exit Do
		End If
		/*******取“失败”点的颜色**********/
		colorP9 = GetPixelColor(windowX + 547, windowY + 221)
		colorP10 = GetPixelColor(windowX + 547, windowY + 225)
		colorP11 = GetPixelColor(windowX + 547, windowY + 233)
		If colorP9 = colorRed And colorP10 = colorRed AND colorP11 = colorRed Then 
			battleNum = battleNum + 1
			Exit Do
		End If
		/*******取“平局”点的颜色**********/
		colorP12 = GetPixelColor(windowX + 547, windowY + 190)
		colorP13 = GetPixelColor(windowX + 547, windowY + 205)
		colorP14 = GetPixelColor(windowX + 547, windowY + 213)
		If colorP12 = colorLightYellow And colorP13 = colorLightYellow AND colorP14 = colorLightYellow Then 
			battleNum = battleNum + 1
			Exit Do
		End If
		/*******取生命值优势或劣势时的颜色**********/
		colorP15 = GetPixelColor(windowX + 547, windowY + 190)
		colorP16 = GetPixelColor(windowX + 547, windowY + 206)
		colorP17 = GetPixelColor(windowX + 547, windowY + 213)
		If colorP15 = colorRed And colorP16 = colorRed AND colorP17 = colorRed Then 
			battleNum = battleNum + 1
			Exit Do
		End If
		//每2秒判断一次是否已经结束战斗
		//每30秒甩一次技能
		//如果已经结束战斗，那么跳出循环
		/***************************************************************/
		////每30s甩一波技能防止进入离开状态，如果打的人很多，屏蔽下面代码////
		loopNum2 = loopNum Mod 45	
		If loopNum2 = 0 Then 
			UseSkill(81,900)	//按Q
			UseSkill(69,900)	//按E
			UseSkill(82,900)	//按R
			UseSkill(90,900)	//按Z
			UseSkill(88,900)	//按X
			UseSkill(67,900)	//按C
			UseSkill(49,900)	//按1
			UseSkill(50,900)	//按2
			UseSkill(51,900)	//按3
			UseSkill(52,900)	//按4
			UseSkill(53,900)	//按5
		End If
		loopNum = loopNum+1
		/***************************************************************/
		Delay(2000)
	Loop
	endBattle()
End Function

//判断已经结束的时候，等待3s后点击退出，之后再等待几秒
Function EndBattle()
	Delay (3000)
	ClickMouse(windowX+783, windowY+505, 50, 1)
	Delay (5000)
End Function

Function LogIn(loginNum)
	
End Function

Function UseSkill(skillNum, delayTime)
	ClickKey(skillNum, delayTime)
	Delay(200)
	MouseClick()
	KeyDown(83,1)
	Delay (200)
	KeyUp(83,1)
End Function
